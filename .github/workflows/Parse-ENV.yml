name: Parse-ENV

on:
  push:
  workflow_dispatch:
    inputs:
      ssh_host:
        description: "SSH Host"
        required: false
        default: ""
      ssh_user:
        description: "SSH User"
        required: false
        default: ""
      ssh_port:
        description: "SSH Port"
        required: false
        default: ""
      ssh_hostkey:
        description: "SSH Hostkey"
        required: false
        default: ""
      runner:
        description: "Select runner"
        required: true
        default: "windows-latest"
        type: choice
        options:
          - "svr2019-pg"
          - "svr2019-pg-actions-labs-01"
          - "svr2019-pg-actions-labs-02"
          - "windows-2022"
          - "windows-2019"
          - "ubuntu-latest"
          - "ubuntu-22.04"
          - "ubuntu-20.04"

jobs:
  Parse-ENV:
    name: Parse-ENV ${{ inputs.runner != '' && inputs.runner || 'windows-latest' }}
    runs-on: ${{ inputs.runner != '' && inputs.runner || 'windows-latest' }}
    env:
      toJSON_github: ${{ toJSON(github) }}
      toJSON_secrets: ${{ toJSON(secrets) }}
      toJSON_inputs: ${{ toJSON(github.event.inputs) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # For Windows runners (using PowerShell)
      - name: Parse-ENV (Windows)
        if: startsWith(runner.os, 'Windows')
        shell: powershell
        run: |
          ./scripts-yml/parse-env.ps1

      # For Linux runners (using pwsh)
      - name: Parse-ENV (Linux)
        if: runner.os == 'Linux'
        shell: pwsh
        run: |
          ./scripts-yml/parse-env.ps1

      # Step to display the environment variables on Windows (PowerShell)
      - name: Show environment variables (PowerShell on Windows)
        if: startsWith(runner.os, 'Windows')
        shell: powershell
        run: |
          Write-Host "O_INPUTS_GITHUB_TOKEN=$env:O_INPUTS_GITHUB_TOKEN"
          Write-Host "O_SECRETS_GITHUB_TOKEN=$env:O_SECRETS_GITHUB_TOKEN"

      # Step to display the environment variables on Windows (CMD)
      - name: Show environment variables (CMD on Windows)
        if: startsWith(runner.os, 'Windows')
        shell: cmd
        run: |
          echo O_INPUTS_GITHUB_TOKEN=%O_INPUTS_GITHUB_TOKEN%
          echo O_SECRETS_GITHUB_TOKEN=%O_SECRETS_GITHUB_TOKEN%

      # Step to display the environment variables on Linux (pwsh)
      - name: Show environment variables (pwsh on Linux)
        if: runner.os == 'Linux'
        shell: pwsh
        run: |
          Write-Host "O_INPUTS_GITHUB_TOKEN=$env:O_INPUTS_GITHUB_TOKEN"
          Write-Host "O_SECRETS_GITHUB_TOKEN=$env:O_SECRETS_GITHUB_TOKEN"

      # Step to display the environment variables on Linux (bash)
      - name: Show environment variables (bash on Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          echo "O_INPUTS_GITHUB_TOKEN=$O_INPUTS_GITHUB_TOKEN"
          echo "O_SECRETS_GITHUB_TOKEN=$O_SECRETS_GITHUB_TOKEN"
